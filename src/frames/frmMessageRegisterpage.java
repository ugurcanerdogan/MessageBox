package frames;

import entities.Message;
import entities.User;
import utils.CryptoHelper;
import utils.FileReadHelper;
import utils.FileWriteHelper;
import utils.HashHelper;

import javax.swing.*;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.Base64;

public class frmMessageRegisterpage extends javax.swing.JFrame {
    ArrayList<User> userList;
    ArrayList<Message> messageList;
    String[] usernamesArray;
    CryptoHelper cryptoHelper;
    String userDataFilePath = "src\\users.data";
    String messageDataFilePath = "src\\messages.data";

    /**
     * Creates new form frmRegisterpage
     */
    public frmMessageRegisterpage() {
        initComponents();
        userList = FileReadHelper.createUserList(userDataFilePath);
        messageList = FileReadHelper.createMessageList(messageDataFilePath, userList);
        usernamesArray = FileReadHelper.createUsernamesArray(userList);
        comboboxUsers.setModel(new DefaultComboBoxModel<>(usernamesArray));
        try {
            cryptoHelper = new CryptoHelper("hardcodedKey");
        } catch (Exception e) {
            throw new RuntimeException(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinner1 = new javax.swing.JSpinner();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        comboboxUsers = new javax.swing.JComboBox<>();
        txtFieldMsgCodename = new javax.swing.JTextField();
        sep = new javax.swing.JSeparator();
        lblAuthUsername = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        lblMsgCodename = new javax.swing.JLabel();
        lblEnterMessage = new javax.swing.JLabel();
        lblConfirmPassword = new javax.swing.JLabel();
        psw1 = new javax.swing.JPasswordField();
        psw2 = new javax.swing.JPasswordField();
        btnHome = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnCreateMsg = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        scrollPane = new javax.swing.JScrollPane();
        txtAreaMessage = new javax.swing.JTextArea();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Register Message");

        lblAuthUsername.setText("Receiver's username");

        lblPassword.setText("Message Password");

        lblMsgCodename.setText("Message codename (ID)*");

        lblEnterMessage.setText("ENTER YOUR MESSAGE :");

        lblConfirmPassword.setText("Confirm Password");

        btnHome.setBackground(new java.awt.Color(0, 204, 204));
        btnHome.setText("HOME");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        btnReset.setBackground(new java.awt.Color(255, 51, 0));
        btnReset.setText("RESET");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnCreateMsg.setBackground(new java.awt.Color(0, 204, 51));
        btnCreateMsg.setText("Create Message");
        btnCreateMsg.setToolTipText("");
        btnCreateMsg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateMsgActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 204, 255));

        txtAreaMessage.setColumns(20);
        txtAreaMessage.setRows(5);
        scrollPane.setViewportView(txtAreaMessage);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addComponent(scrollPane).addContainerGap()));
        jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap()));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap(30, Short.MAX_VALUE).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(lblConfirmPassword).addComponent(lblPassword).addComponent(lblMsgCodename).addComponent(lblAuthUsername).addComponent(lblEnterMessage)).addGap(25, 25, 25).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(comboboxUsers, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false).addComponent(psw2, javax.swing.GroupLayout.Alignment.LEADING).addComponent(psw1, javax.swing.GroupLayout.Alignment.LEADING).addComponent(txtFieldMsgCodename, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))).addGap(186, 186, 186)).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))).addGroup(layout.createSequentialGroup().addComponent(btnHome).addGap(91, 91, 91).addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(btnCreateMsg)).addComponent(sep)).addContainerGap(30, Short.MAX_VALUE)));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap(20, Short.MAX_VALUE).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(lblAuthUsername).addComponent(comboboxUsers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addGap(20, 20, 20).addComponent(sep, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(18, 18, 18).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(lblMsgCodename).addComponent(txtFieldMsgCodename, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addGap(20, 20, 20).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(lblPassword).addComponent(psw1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addGap(20, 20, 20).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(lblConfirmPassword).addComponent(psw2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addGap(20, 20, 20).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(lblEnterMessage).addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(btnHome).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(btnReset).addComponent(btnCreateMsg))).addContainerGap(17, Short.MAX_VALUE)));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        frmHomepage frmHomepage = new frmHomepage();
        frmHomepage.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnHomeActionPerformed

    private void resetFields() {
        comboboxUsers.setSelectedIndex(-1);
        txtFieldMsgCodename.setText("");
        txtAreaMessage.setText("");
        psw1.setText("");
        psw2.setText("");
        psw1.setEchoChar('*');
        psw2.setEchoChar('*');
    }

    private void btnCreateMsgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateMsgActionPerformed
        String username = (String) comboboxUsers.getSelectedItem();
        String messageId = txtFieldMsgCodename.getText();
        String rawContent = txtAreaMessage.getText();
        String rawPassword = String.valueOf(psw1.getPassword());
        String rawPasswordConfirmation = String.valueOf(psw2.getPassword());

        if (username.equals("") || messageId.equals("") || rawContent.equals("") || rawPassword.equals("") || rawPasswordConfirmation.equals("")) {
            JOptionPane.showMessageDialog(null, "Fields cannot be empty!", "MESSAGE REGISTER ERROR", JOptionPane.ERROR_MESSAGE);
        } else {
            if (rawPassword.equals(rawPasswordConfirmation)) {
                if (FileReadHelper.messageIdUniquenessCheck(messageId, messageList)) {

                    User userOfMessage = null;
                    for (User user : userList) {
                        if (user.getUsername().equals(username)) {
                            userOfMessage = user;
                        }
                    }
                    String hashedPassword = HashHelper.getMd5(rawPassword);
                    String encryptedOutputString = cryptoHelper.encrypt(rawContent);
                    String outputMessageInfo = messageId + "\t" + encryptedOutputString + "\t" + hashedPassword + "\t" + username;
                    try {
                        FileWriteHelper.writeNewLine(messageDataFilePath, outputMessageInfo);
                    } catch (IOException e) {
                        throw new RuntimeException(e);
                    }
                    messageList.add(new Message(messageId, encryptedOutputString, hashedPassword, userOfMessage));
                    JOptionPane.showMessageDialog(null, "Message has been added!", "MESSAGE ADDED", JOptionPane.INFORMATION_MESSAGE);
                    resetFields();
                } else {
                    JOptionPane.showMessageDialog(null, "Message ID must be unique! Please try another message ID.", "MESSAGE ID UNIQUENESS ERROR", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Passwords are not equal! Please enter the same password values.", "PASSWORD ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnCreateMsgActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        txtFieldMsgCodename.setText("");
        psw1.setText("");
        psw2.setText("");
        txtAreaMessage.setText("");
    }//GEN-LAST:event_btnResetActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmMessageRegisterpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmMessageRegisterpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmMessageRegisterpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmMessageRegisterpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmMessageRegisterpage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreateMsg;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnReset;
    private javax.swing.JComboBox<String> comboboxUsers;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JLabel lblAuthUsername;
    private javax.swing.JLabel lblConfirmPassword;
    private javax.swing.JLabel lblEnterMessage;
    private javax.swing.JLabel lblMsgCodename;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JPasswordField psw1;
    private javax.swing.JPasswordField psw2;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JSeparator sep;
    private javax.swing.JTextArea txtAreaMessage;
    private javax.swing.JTextField txtFieldMsgCodename;
    // End of variables declaration//GEN-END:variables
}
